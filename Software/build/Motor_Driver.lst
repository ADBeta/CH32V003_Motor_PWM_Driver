
build/Motor_Driver.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	0a00006f          	j	a0 <_einit>
   4:	00000000          	.word	0x00000000
   8:	0000011c          	.word	0x0000011c
   c:	0000011a          	.word	0x0000011a
	...
  30:	0000011a          	.word	0x0000011a
  34:	00000000          	.word	0x00000000
  38:	0000011a          	.word	0x0000011a
  3c:	00000000          	.word	0x00000000
  40:	0000011a          	.word	0x0000011a
  44:	0000011a          	.word	0x0000011a
  48:	0000011a          	.word	0x0000011a
  4c:	0000011a          	.word	0x0000011a
  50:	0000011a          	.word	0x0000011a
  54:	0000011a          	.word	0x0000011a
  58:	0000011a          	.word	0x0000011a
  5c:	0000011a          	.word	0x0000011a
  60:	0000011a          	.word	0x0000011a
  64:	0000011a          	.word	0x0000011a
  68:	0000011a          	.word	0x0000011a
  6c:	0000011a          	.word	0x0000011a
  70:	0000011a          	.word	0x0000011a
  74:	0000011a          	.word	0x0000011a
  78:	0000011a          	.word	0x0000011a
  7c:	0000011a          	.word	0x0000011a
  80:	0000011a          	.word	0x0000011a
  84:	0000011a          	.word	0x0000011a
  88:	0000011a          	.word	0x0000011a
  8c:	0000011a          	.word	0x0000011a
  90:	0000011a          	.word	0x0000011a
  94:	0000011a          	.word	0x0000011a
  98:	0000011a          	.word	0x0000011a
  9c:	0000                	.insn	2, 0x
	...

Disassembly of section .text:

000000a0 <handle_reset>:
  a0:	20000197          	auipc	gp,0x20000
  a4:	76018193          	addi	gp,gp,1888 # 20000800 <_eusrstack>
  a8:	00018113          	mv	sp,gp
  ac:	08000513          	li	a0,128
  b0:	30051073          	csrw	mstatus,a0
  b4:	468d                	li	a3,3
  b6:	00000517          	auipc	a0,0x0
  ba:	f4a50513          	addi	a0,a0,-182 # 0 <InterruptVector>
  be:	8d55                	or	a0,a0,a3
  c0:	30551073          	csrw	mtvec,a0
  c4:	20000517          	auipc	a0,0x20000
  c8:	f3c50513          	addi	a0,a0,-196 # 20000000 <_data_vma>
  cc:	20000597          	auipc	a1,0x20000
  d0:	f3458593          	addi	a1,a1,-204 # 20000000 <_data_vma>
  d4:	4601                	li	a2,0
  d6:	00b55663          	bge	a0,a1,e2 <handle_reset+0x42>
  da:	c110                	sw	a2,0(a0)
  dc:	0511                	addi	a0,a0,4
  de:	feb54ee3          	blt	a0,a1,da <handle_reset+0x3a>
  e2:	22c00513          	li	a0,556
  e6:	20000597          	auipc	a1,0x20000
  ea:	f1a58593          	addi	a1,a1,-230 # 20000000 <_data_vma>
  ee:	20000617          	auipc	a2,0x20000
  f2:	f1260613          	addi	a2,a2,-238 # 20000000 <_data_vma>
  f6:	00c58863          	beq	a1,a2,106 <handle_reset+0x66>
  fa:	4114                	lw	a3,0(a0)
  fc:	c194                	sw	a3,0(a1)
  fe:	0511                	addi	a0,a0,4
 100:	0591                	addi	a1,a1,4
 102:	fec59ae3          	bne	a1,a2,f6 <handle_reset+0x56>
 106:	e000f7b7          	lui	a5,0xe000f
 10a:	4715                	li	a4,5
 10c:	c398                	sw	a4,0(a5)
 10e:	18c00793          	li	a5,396
 112:	34179073          	csrw	mepc,a5
 116:	30200073          	mret

0000011a <ADC1_IRQHandler>:
 11a:	a001                	j	11a <ADC1_IRQHandler>

0000011c <NMI_Handler>:
 11c:	40021737          	lui	a4,0x40021
 120:	471c                	lw	a5,8(a4)
 122:	008006b7          	lui	a3,0x800
 126:	8fd5                	or	a5,a5,a3
 128:	c71c                	sw	a5,8(a4)

0000012a <SystemInit>:
 12a:	400227b7          	lui	a5,0x40022
 12e:	4705                	li	a4,1
 130:	c398                	sw	a4,0(a5)
 132:	400217b7          	lui	a5,0x40021
 136:	01080737          	lui	a4,0x1080
 13a:	0007a223          	sw	zero,4(a5) # 40021004 <_eusrstack+0x20020804>
 13e:	08170713          	addi	a4,a4,129 # 1080081 <lib_GPIOCTRL.c.701a35c1+0x107de52>
 142:	c398                	sw	a4,0(a5)
 144:	009f0737          	lui	a4,0x9f0
 148:	c798                	sw	a4,8(a5)
 14a:	40021737          	lui	a4,0x40021
 14e:	431c                	lw	a5,0(a4)
 150:	00679693          	slli	a3,a5,0x6
 154:	fe06dde3          	bgez	a3,14e <SystemInit+0x24>
 158:	435c                	lw	a5,4(a4)
 15a:	400216b7          	lui	a3,0x40021
 15e:	9bf1                	andi	a5,a5,-4
 160:	0027e793          	ori	a5,a5,2
 164:	c35c                	sw	a5,4(a4)
 166:	4721                	li	a4,8
 168:	42dc                	lw	a5,4(a3)
 16a:	8bb1                	andi	a5,a5,12
 16c:	fee79ee3          	bne	a5,a4,168 <SystemInit+0x3e>
 170:	e00007b7          	lui	a5,0xe0000
 174:	0f878793          	addi	a5,a5,248 # e00000f8 <_eusrstack+0xbffff8f8>
 178:	0007a023          	sw	zero,0(a5)
 17c:	e00007b7          	lui	a5,0xe0000
 180:	0f478793          	addi	a5,a5,244 # e00000f4 <_eusrstack+0xbffff8f4>
 184:	08000713          	li	a4,128
 188:	c398                	sw	a4,0(a5)
 18a:	8082                	ret

0000018c <main>:
/// @return none
void pwm_set_duty(uint32_t duty);

/*** Main ********************************************************************/
int main()
{
 18c:	1151                	addi	sp,sp,-12
 18e:	c406                	sw	ra,8(sp)
	SystemInit();
 190:	3f69                	jal	12a <SystemInit>


void pwm_init(void)
{
	// Enable TIM2 Clock	
	RCC->APB1PCENR |= RCC_APB1Periph_TIM2;
 192:	400217b7          	lui	a5,0x40021
 196:	4fd8                	lw	a4,28(a5)
	
	// Set the RCC Register to enable clock on the specified port
	*RCC_APB2PCENR |= (APB2PCENR_AFIO | (APB2PCENR_IOPxEN << byte[0]));

	// Clear then set the GPIO Config Register
	gpio_port_reg[ byte[0] ]->CFGLR &=        ~(0x0F  << (4 * byte[1]));
 198:	fff10637          	lui	a2,0xfff10
 19c:	167d                	addi	a2,a2,-1 # fff0ffff <_eusrstack+0xdff0f7ff>
 19e:	00176713          	ori	a4,a4,1
 1a2:	cfd8                	sw	a4,28(a5)
	*RCC_APB2PCENR |= (APB2PCENR_AFIO | (APB2PCENR_IOPxEN << byte[0]));
 1a4:	40021737          	lui	a4,0x40021
 1a8:	4f14                	lw	a3,24(a4)
 1aa:	0216e693          	ori	a3,a3,33
 1ae:	cf14                	sw	a3,24(a4)
	gpio_port_reg[ byte[0] ]->CFGLR &=        ~(0x0F  << (4 * byte[1]));
 1b0:	40011737          	lui	a4,0x40011
 1b4:	40070713          	addi	a4,a4,1024 # 40011400 <_eusrstack+0x20010c00>
 1b8:	4314                	lw	a3,0(a4)
 1ba:	8ef1                	and	a3,a3,a2
 1bc:	c314                	sw	a3,0(a4)
	gpio_port_reg[ byte[0] ]->CFGLR |=  (mode & 0x0F) << (4 * byte[1]);
 1be:	4314                	lw	a3,0(a4)
 1c0:	00090637          	lui	a2,0x90
 1c4:	8ed1                	or	a3,a3,a2
 1c6:	c314                	sw	a3,0(a4)

	// Set GPIO-D4 OUTPUT 10MHz, Aleternate Function (Multiplex)
	gpio_set_mode(GPIO_PD4, OUTPUT_10MHZ_PP | OUTPUT_PP_AF);

	// Reset TIM2, Inits all registers
	RCC->APB1PRSTR |= RCC_APB1Periph_TIM2;
 1c8:	4b98                	lw	a4,16(a5)
 1ca:	00176713          	ori	a4,a4,1
 1ce:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_TIM2;
 1d0:	4b98                	lw	a4,16(a5)
 1d2:	9b79                	andi	a4,a4,-2
 1d4:	cb98                	sw	a4,16(a5)

	// Set Prescaler
	TIM2->PSC = 0x0000;
 1d6:	400007b7          	lui	a5,0x40000
 1da:	02079423          	sh	zero,40(a5) # 40000028 <_eusrstack+0x1ffff828>
	// Set PWM Max Value (Autoreload Value)
	TIM2->ATRLR = 254;
 1de:	0fe00713          	li	a4,254
 1e2:	02e79623          	sh	a4,44(a5)

	// Set the Compare Capture Register
	// TIM2_OC1M = 0b111 - PWM Mode 2 - Enable Preload
	TIM2->CHCTLR1 |= TIM_OC1M_2 | TIM_OC1M_1 | TIM_OC1M_0 | TIM_OC1PE;
 1e6:	0187d703          	lhu	a4,24(a5)
 1ea:	07876713          	ori	a4,a4,120
 1ee:	00e79c23          	sh	a4,24(a5)

	// Enable auto-reload
	TIM2->CTLR1 |= TIM_ARPE;
 1f2:	0007d703          	lhu	a4,0(a5)
 1f6:	08076713          	ori	a4,a4,128
 1fa:	00e79023          	sh	a4,0(a5)

	// Enable channel output, set polarity ACTIVE_LOW
	TIM2->CCER |= TIM_CC1E | TIM_CC1P;
 1fe:	0207d703          	lhu	a4,32(a5)
 202:	00376713          	ori	a4,a4,3
 206:	02e79023          	sh	a4,32(a5)

	// Initialise Counter
	TIM2->SWEVGR |= TIM_UG;
 20a:	0147d703          	lhu	a4,20(a5)
 20e:	00176713          	ori	a4,a4,1
 212:	00e79a23          	sh	a4,20(a5)

	// Enable TIM2
	TIM2->CTLR1 |= TIM_CEN;
 216:	0007d703          	lhu	a4,0(a5)
 21a:	00176713          	ori	a4,a4,1
 21e:	00e79023          	sh	a4,0(a5)
}


void pwm_set_duty(uint32_t duty)
{
	TIM2->CH1CVR = duty;
 222:	08000713          	li	a4,128
 226:	dbd8                	sw	a4,52(a5)
	while(1) { }
 228:	a001                	j	228 <main+0x9c>
	...

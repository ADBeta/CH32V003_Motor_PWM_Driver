To configure TIM2 as PWM

* Enable TIM2 Clock
* Set TIM2 to be PWM mode
* Set the GPIO Pin to use as output
* Set prescaler value
* Set auto-reload (PWM period)
* Set Compare val (PWM Duty Cycle)
* Enable counter
* Enable Output


// Enable TIM2 Clock
RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;

// Set GPIO for PWM 
RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;  // Enable GPIOA clock

// Set PA0 to alternate function mode
GPIOA->MODER &= ~(GPIO_MODER_MODER0);
GPIOA->MODER |= GPIO_MODER_MODER0_1;

// Set alternate function for PA0 to AF1 (TIM2)
GPIOA->AFR[0] &= ~(GPIO_AFRL_AFRL0);
GPIOA->AFR[0] |= GPIO_AFRL_AFSEL0_AF1;

// Set Timer Prescaler
TIM2->PSC = (16 - 1);  // Prescaler value

// Set Auto-Reload
TIM2->ARR = (1000 - 1);  // Auto-reload value

// Set compare to 50%
TIM2->CCR1 = (500 - 1);  // Compare value

// Set PWM mode for timer
TIM2->CCMR1 &= ~(TIM_CCMR1_OC1M);  // Clear output compare mode bits
TIM2->CCMR1 |= (TIM_CCMR1_OC1M_PWM1);  // Set PWM mode 1
TIM2->CCMR1 |= TIM_CCMR1_OC1PE;  // Enable preload register on CCR1
TIM2->CCER |= TIM_CCER_CC1E;  // Enable capture/compare on channel 1

// Enable TIM2
TIM2->CR1 |= TIM_CR1_CEN;  // Enable TIM2 counter
TIM2->EGR |= TIM_EGR_UG;  // Generate an update event to reload the prescaler value immediately


ADC setup

	// Set ACD Clock. Set bits 15:11 to 0 - HBCLK/2 = 24MHz
	RCC->CFGR0 &= 0xFFFF07FF;
	
	// Enable the ADC clock
	RCC->APB2PCENR |= RCC_APB2Periph_ADC1;
	


	// Set Pin Mode to Analog Input
	gpio_set_mode( , INPUT_ALALOG);	

	// Reset the ADC, Inits all registers
	RCC->APB2PRSTR |=  RCC_APB2Periph_ADC1;
	RCC->APB2PRSTR &= ~RCC_APB2Periph_ADC1;
	


	// Set up single conversion on chl 7
	ADC1->RSQR1 = 0;
	ADC1->RSQR2 = 0;
	ADC1->RSQR3 = 7;	// 0-9 for 8 ext inputs and two internals
	
	// set sampling time for chl 7
	ADC1->SAMPTR2 &= ~(ADC_SMP0<<(3*7));
	ADC1->SAMPTR2 |= 7<<(3*7);	// 0:7 => 3/9/15/30/43/57/73/241 cycles
	




	// Enable the ADC, and set the triggering to external
	ADC1->CTLR2 |= ADC_ADON | ADC_EXTSEL;
	
	// Reset calibration, wait for it to finish
	ADC1->CTLR2 |= ADC_RSTCAL;
	while(ADC1->CTLR2 & ADC_RSTCAL);
	
	// Calibrate, wait for it to finish
	ADC1->CTLR2 |= ADC_CAL;
	while(ADC1->CTLR2 & ADC_CAL);






/*
 * start conversion, wait and return result
 */
uint16_t adc_get( void )
{
	// start sw conversion (auto clears)
	ADC1->CTLR2 |= ADC_SWSTART;
	
	// wait for conversion complete
	while(!(ADC1->STATR & ADC_EOC));
	
	// get result
	return ADC1->RDATAR;
}
